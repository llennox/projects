from selenium import webdriver
import unittest



#for buyer and seller there is a faq about register, contact us, sign in 
# this bot will scroll through each tab assert there is a word in the text then create an account and sign in. 
class newVisitorTest(unittest.TestCase):


    def setUp(self):
        self.browser = webdriver.Firefox()
        self.browser.implicitly_wait(5)


    def tearDown(self):
        self.browser.quit()

    def test_can_create_account_scroll_tabs(self):
        self.browser.get('http://localhost:8000')
        self.assertIn('bl4btc', self.browser.title)
        register_b = self.browser.find_element_by_id('register_button')
        register_b.click() 
        self.assertIn('register', self.browser.title)
        register_b = self.browser.find_element_by_id('faq_button')
        register_b.click() 
        self.assertIn('faq', self.browser.title)
        register_b = self.browser.find_element_by_id('contact_us')
        register_b.click() 
        self.assertIn('contact_us', self.browser.title)
        register_b = self.browser.find_element_by_id('sign_in')
        register_b.click() 
        self.assertIn('sign_in', self.browser.title)
        self.browser.implicitly_wait(5)
        #register acount then sign in

    #def test_can_register_account(self):
        #self.browser.get('http://localhost:8000/register_page/')
        #self.assertIn('register', self.browser.title)
        #email = self.browser.find_element_by_id('username_input')
        #email.send_keys('concongough')
        #email = self.browser.find_element_by_id('email_input')
        #email.send_keys('gonnellcough@gmail.com')
        #password1 = self.browser.find_element_by_id('password1')
        #password1.send_keys('Mypassword1')
        #password2 = self.browser.find_element_by_id('password2')
        #password2.send_keys('Mypassword1')
        #verify_email = self.browser.find_element_by_id('verify_email')
        #verify_email.click()
        #self.browser.implicitly_wait(5)

    def test_can_sign_in(self):
        self.browser.get('http://localhost:8000/sign_page/')
        username = self.browser.find_element_by_id('username_input')
        username.send_keys('concongough')
        password1 = self.browser.find_element_by_id('password_input')
        password1.send_keys('Mypassword1')
        sign_in = self.browser.find_element_by_id('sign_in')
        sign_in.click()
        self.browser.implicitly_wait(5)

    def test_can_change_password(self):
        self.browser.get('http://localhost:8000/sign_page/')
        username = self.browser.find_element_by_id('username_input')
        username.send_keys('concongough')
        password1 = self.browser.find_element_by_id('password_input')
        password1.send_keys('Mypassword1')
        sign_in = self.browser.find_element_by_id('sign_in')
        sign_in.click()
        time.sleep(3)
        self.browser.get('http://localhost:8000/change_password/')
        self.browser.implicitly_wait(5)
        password1 = self.browser.find_element_by_id('password_input1')
        password1.send_keys('Mypassword1')
        password2 = self.browser.find_element_by_id('password_input2')
        password2.send_keys('Mypassword2')
        password3 = self.browser.find_element_by_id('password_input3')
        password3.send_keys('Mypassword2')
        sign_in = self.browser.find_element_by_id('verify_email')
        sign_in.click()
        self.browser.implicitly_wait(5)
#test that dashboard exists now, user can change email and btc addresses


if __name__ == '__main__':
    unittest.main(warnings='ignore')
